길진않은데 정리할것들
  
  오버로딩
  
  hash bucket 관련 -> Open addressing (linear probing,quadratic probing) // Separate Chaining

  알고리즘 관련 -> 생일문제(birthday problem) ,Horner's method(다항식 -> 단항식으로 바꿔서 표현하는 재귀적 방법)
  
  (shift 연산 효율성) 31 * N = 32N - N = (2<<5) * N - N => 이런식으로 2^n 꼴이면 단순화 가능

  반복의 구현 -> 재귀함수 vs 반목문(while 이나 기타 등등), 어느 것이 유리한가? // 꼬리 재귀(tail call recursive 참조)

  bitwise 연산자(Java)

  수식입력툴(Latex)

  main(String[] args) => args라는 String 배열을 파라미터로 받는 main이라는 함수를 생성

  if, else if, switch => 컴파일러의 예상 연산량 줄이기 
  ex) 은행 atm 거래 => 보통 거래(입금,출금,잔액 조회) 1회, 거래 종료 1회로 루틴이 끝나기 때문에 거래 종료를 맨앞 if에 두고, 그 else if에는 접근량 많이 예상되는 순서대로 두는게 좋을듯?
