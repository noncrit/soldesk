https://github.com/noncrit/soldesk/tree/main/java/2024_05/2024_05_23/Singleton_Pattern

//객체가 유일한 객체가 되려면?
//프로그램 디자인 패턴 : 싱글톤 패턴(Singleton Pattern)
//	클래스가 최초 한번만 메모리를 할당하고(static 영역)
//	그 메모리에 객체를 만들어서 사용하는 디자인 패턴
//	고정된 메모리 영역을 얻으면서, 하나의 객체를 사용하기 때문에 메모리 낭비가 상대적으로 덜함

// 아래 예시에서는 Cat으로 이름이 다른 객체 2개를 생성해도, getCat 메소드를 사용하면 같은 메모리에 있는 final 로 선언된 CAT을 참조하게 됨

public class Cat {
	private String name;
	private int age;
	private String nickname;
	
	//Singleton style!! - 이런식으로 static 영역에 변경불가능한 객체를 하나 선언해버림
	private static final Cat CAT = new Cat("버터",7,"버어터");
	
	public Cat() {
		// TODO Auto-generated constructor stub
	}

	public Cat(String name, int age, String nickname) {
		super();
		this.name = name;
		this.age = age;
		this.nickname = nickname;
	}
	
	public static Cat getCat() {
		return CAT;
	}

	public void print_Cat() {
		
		System.out.println("-=-=-=-=-=-=-=-=-=-=-");
		System.out.println("이름 : "+this.name);
		System.out.println("나이 : "+this.age);
		System.out.println("별명 : "+this.nickname);
		
	}
}

-------------------------------------------------------
