https://github.com/noncrit/soldesk/blob/main/DB/2024_06/2024_06_03/DB_select_practice
https://github.com/noncrit/soldesk/blob/main/DB/2024_06/2024_06_03/db_factory_pattern_READ

DML(Data Manipulation Language)
테이블에 **데이터를** 검색,삽입,수정,삭제 하는데 사용되는 문장
select, insert, update, delete 등이 있음 => 줄여서 CRUD 라고 부름 (Create, Read, Update, Delete)
 (create table은 여기에 속하지는 않음) (DBA의 작업)


	select [distinct(옵션)] 컬럼명, [컬럼명 as 별칭 || 컬럼명 별칭], [연산자], [통계함수]
		from [테이블명]
		where [조건식]
		group by [그룹 대상]
		having [함수 포함 조건]
		order by [정렬 대상 asc/desc(오름차순, 내림차순)
	(내장함수 실행은 select 바로 뒤쪽에서만 가능한듯?)

--Where 절 ( 조건식 )
	--전체 데이터 중 지정한 조건에 맞는 데이터를 찾아주는 문장
	--조건식에 사용할 연산자를 알아보자 (비교 연산자)
	-- =, !=, ^=, <>, >, <, >=, <= 등등
	-- !=, ^=, <>  이 세개의 연산자는 모두 같지 않다를 의미함
	-- !=, <>는 표준화를 하려다보니 사용하게됨
	-- ^=는 다른 DB랑 차별성을 두기 위해 사용함(?!)


insert into jun3_snack(snack_number, snack_name, snack_manufacturer,snack_price )
	values(1, '초코파이', '오리온', 5000);

--컬럼의 순서를 다르게 넣어보기? ->파라미터 타입, 이름만 지켜주면 멀쩡히 들어감
insert into jun3_snack(snack_name, snack_number, snack_price,snack_manufacturer)
	values('새콤달콤', 3, 5000, '롯데');

--컬럼에 값을 안넣은 경우 > not null 걸려있으면 에러 발생( not null 제약이 없는 경우 null값으로 들어감)
