---쓸만한 내장 함수들---
/*
	1. 숫자 함수
		-ABS(숫자)		: 절대값 계산 ex)ABS(-4.5)
		-ROUND(숫자, m)	: 반올림, m은 소수점 기준 자릿수	ex) round(5.36 ,1)
		-POWER(숫자, n )	: 숫자의 n제곱을 계산 할 때 사용함	ex) power(2, 3)
		-TRUNC(숫자,m)	: 숫자의 m번째 자리까지 남기고 값을 버fla	ex)trunc(123456, 0). trunc(123456, -1)
		-MOD)(숫자, m)	: 숫자의 모듈러 연산을 진행함
		sqrt(숫자)		: 숫자의 제곱근 값을 계산(숫자는 무조건 양수 ex)sqrt(9.0)
*/

select ABS(-4.5) from dual;
select round(5.36 ,1) from dual;
select power(2, 3) from dual;
select trunc(123456, -3) from dual;
select sqrt(9.0) from dual;

/*
	2. 문자 함수
		-CONCAT(s1, s2) 	: 두 문자열을 연결					
		ex) concat('abcd','efg')
		
		-substr(s1, n, k)	: 문자열의 n 번째부터 k만큼의 길이를 반환	
		ex) substr('abcdefg',3,4)
		
		-instr(s1, s2, n, k): s1의 n 번째부터 시작해서 찾고자 하는 s2가 k번째 나타나는 문자열을 반환
		ex) instr('hello', 'l', 2)

		-lpad(s, n, c)		: 문자 s의 왼쪽부터 지정한 자리수 n 까지 지정한 문자 c로 채워줌
		ex) lpad('abc', 5, '*')

		-rpad(s, n, c)		: 문자 s의 오른쪽부터 지정한 자리수 n 까지 지정한 문자 c로 채워줌
		ex) rpad('abc', 5, '*')

		-LTRIM(s1, s2)		: 문자열 s1 기준으로 왼쪽에 있는 지정한 문자 s2 제거
		ex) LTRIM('*abcv','*')
		
		-RTRIM(s1, s2)		: 문자열 s1 기준으로 오른쪽에 있는 지정한 문자 s2 제거
		ex) RTRIM('abcv*','*')
		
		-REPLACE(s1, s2, s3): s1에서 지정한 문자 s2를 문자 s3로 변경
		ex) REPLACE('Jack and Jue', 'J', 'BL')
		
		-LENGTH(s1)			: 글자의수를 세어주는 함수
		ex) LENGTH('zzz')
		
		-LENGTHB(s1)		: 글자의 용량(바이트 단위)를 세어주는 함수
		ex) LENGTHB('zzzzzzzzz')
*/

select concat('abcd','efg') from dual;

select substr('abcdefg',3,4) from dual;	--얘는 인덱스 1부터 가네?

select instr('hello', 'l', 2) from dual;--인덱스 0부터 세는듯?

select lpad('abc', 5, '*') from dual;

select rpad('abc', 5, '*') from dual;

select LTRIM('*abcv*','*') from dual;

select RTRIM('abcv**','*') from dual;

select REPLACE('Jack and Jue', 'J', 'BL') from dual;

select LENGTHB('zzzzzzzzz') from dual;

/*
	3. 날짜 / 시간 관련 함수
		[날짜형식] - 무조건 대문자로 작성
		YYYY 		: 4자리 연도
		YYY, YY, Y	: 각각 4자리 연도 마지막 3,2,1 자리
		MM 	: 월
		DD 	: 1달 중 날짜(일자)
		DAY	: 요일 (월요일 ~ 일요일)
		DY	: 요일 약자(월 ~ 일)
		HH, HH12	: 12시간 / AM or PM : 오전 OR 오후
		HH24: 24시간
		MI	: 분 / SS : 초

 */
		--SYSDATE: 현재 날짜 / 시간을 반환
		--TO_DATE(s1, datetime형식)	: 문자형 데이터를 날짜형으로 변환 (오전 오후 둘 중 하나 들어오면 구분해줌)
		--ex) SELECT TO_DATE('2024-06-01 오전 06:00', 'YYYY-MM-DD PM HH:MI) FROM DUAL;
		
		--TO_CHAR(date, datetime 형식)	: 날짜형 데이터를 문자형으로 변환
		--ex) SELECT TO_CHAR(sysdate, 'YYYY-MM-DD') FROM DUAL;
		--특정한 날짜 값을 받아오고 싶다면, SYSDATE 자리에 TO_DATE 함수를 넣어서 활용
		
		--TO_DATE => 리턴되는 값의 자료형이 날짜형
		--TO_CHAR => 리턴되는 값의 자료형이 문자형
		
		--ADD-MONTHS(date, 숫자)	: 날짜에서 지정한 달만큼 더함
		--(1 : 다음달, -1 : 이전달)
		--SELECT ADD_MONTHS(SYSDATE, -3) FROM DUAL;
		
		-LASTDAY(date)	: 그 달의 마지막 날짜를 알려준다.
		--SELECT LAST_DAY(SYSDATE) FROM DUAL;
		
-------------------------------
--오늘 날짜 기준 연도 조회( 테이블 헤더에 '연도' / 컬럼에 '2024'년이라고 나오게 작성)
SELECT CONCAT( TO_CHAR(SYSDATE, 'YYYY') , '연도') AS 연도 FROM DUAL;

--오늘 날짜 기준 월 조회( 테이블 헤더에 '월' / 컬럼에 '06'월이라고 나오게 작성)
SELECT CONCAT( TO_CHAR(SYSDATE, 'MM') , '월') AS 월 FROM DUAL;

--오늘 날짜 기준 일 조회( 테이블 헤더에 '일' / 컬럼에 '03'일이라고 나오게 작성)
SELECT CONCAT( TO_CHAR(SYSDATE, 'DD'), '일') AS 일 FROM DUAL;

--오늘 날짜 기준 시/분 조회(테이블 헤더에 각각 '시' '분'/ 컬럼에 각각 '?시', '?분' 이라고 나오게
SELECT CONCAT( TO_CHAR(SYSDATE, 'HH'), '시') AS 시 FROM DUAL;
SELECT CONCAT( TO_CHAR(SYSDATE, 'MI'), '분') AS 분 FROM DUAL;

--지금이 오전인지 오후인지 조회
SELECT TO_CHAR(SYSDATE,'PM') AS 오전_오후 FROM DUAL;

--문자열 2024-06-06 오전 07:23 을 날짜형 데이터 20204.06.06 으로 조회
SELECT 

--오늘 날짜 기준 3달 전 마지막 날은 몇월 며칠인지 조회
